'use strict';

const helpers = require('../../helpers');

describe('identity', () => {
  const utils = helpers.getUtils();
  it('should create table with identity column', function () {
    return helpers.alterObject('table', {
      properties: {
        columns: {
          id: { type: 'int', identity: true },
        },
      },
      syncOptions: { force: true },
      expectQueries: [
        'drop table if exists [table] cascade;',
        'create table "DifferSchema"."users" ( "id" integer not null generated BY DEFAULT as identity );',
      ],
    });
  });

  it('should add the identity column', function () {
    return helpers.alterObject(
      'table',
      {
        properties: {
          columns: {
            id: 'int',
          },
        },
        syncOptions: { force: true },
        ignoreResultCheck: true,
      },
      {
        properties: {
          columns: {
            id: { type: 'int', identity: { max: 9999 } },
          },
        },
        expectQueries: [
          'alter table "DifferSchema"."users" alter column "id" set not null;',
          'alter table "DifferSchema"."users" alter column "id" add generated BY DEFAULT as identity ( maxvalue 9999 );',
        ],
      }
    );
  });

  it('should change the identity column', function () {
    return helpers.alterObject(
      'table',
      {
        properties: {
          columns: {
            id: {
              type: 'int',
              identity: { start: 0, min: 0, max: 100 },
            },
          },
        },
        syncOptions: { force: true },
        ignoreResultCheck: true,
      },
      {
        properties: {
          columns: {
            id: {
              type: 'int',
              identity: { generation: 'ALWAYS', start: 100, min: 0, max: 9999 },
            },
          },
        },
        expectQueries: [
          'alter table [table] alter column "id" set generated ALWAYS set maxvalue 9999 set start 100;',
        ],
      }
    );
  });

  it('should remove identity attribute of column', function () {
    return helpers.alterObject(
      'table',
      {
        properties: {
          columns: {
            id: { type: 'int', identity: true },
          },
        },
        syncOptions: { force: true },
        ignoreResultCheck: true,
      },
      {
        properties: {
          columns: {
            id: { type: 'int', identity: false },
          },
        },
        expectQueries: [
          'alter table [table] alter column "id" drop identity;',
          'alter table [table] alter column "id" drop not null;',
        ],
      }
    );
  });

  it('should adjust identity sequences', function () {
    return helpers.alterObject(
      'table',
      {
        properties: {
          columns: {
            id: { type: 'int', identity: true },
          },
        },
        syncOptions: { force: true },
        ignoreResultCheck: true,
        onSync: (tables) => {
          return utils.client.query(
            `insert into ${tables[0]} (id) values(100)`
          );
        },
      },
      {
        properties: {
          columns: {
            id: { type: 'int', identity: true },
          },
        },
        syncOptions: { adjustIdentitySequences: true },
        expectQueries: [
          'alter table [table] alter column "id" restart with 100;',
        ],
      }
    );
  });
});
